{"version":3,"sources":["images/logo.svg","components/Header.js","components/Profile.js","components/Card.js","components/Cards.js","components/Main.js","components/Footer.js","components/Page.js","components/Popup.js","utils/constants.js","components/Input.js","components/Form.js","components/PopupWithForm.js","components/Popups/AddPlacePopup.js","components/Popups/EditAvatarPopup.js","components/Popups/EditProfilePopup.js","components/ImagePopup.js","utils/Api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","React","Component","memo","Profile","props","userName","userDescription","userAvatar","onAddPlacePopupOpen","onEditAvatarPopupOpen","onEditProfilePopupOpen","type","onClick","Card","item","onCardClick","link","name","bind","undefined","likes","length","Cards","items","map","_id","Main","cards","Footer","console","debug","Page","Popup","id","children","isOpen","viewClass","onClose","onMouseDown","evt","target","currentTarget","document","querySelector","Input","minLength","maxLength","placeholder","value","required","htmlFor","defaultProps","autoComplete","Form","inputs","submitTitle","noValidate","input","PopupWithForm","title","onSubmit","propsAreEqual","nextProps","isProcessing","AddPlacePopup","useMemo","EditAvatarPopup","EditProfilePopup","ImagePopup","selectedCard","CARDS_URL","USER_INFO_URL","LIKE_URL","api","baseUri","headers","this","_baseUri","_headers","cardData","_sendJson","JSON","stringify","cardId","avatar","userInfo","url","method","body","uri","fetch","then","response","status","ok","json","Promise","reject","authorization","App","useState","setUserName","setUserDescription","setUserAvatar","setCards","setSelectedCard","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isImagePreviewPopupOpen","setIsImagePreviewPopupOpen","useEffect","handleEscKeyPressed","preventDefault","key","handleCloseAllPopups","addEventListener","removeEventListener","all","fetchUserInfo","fetchCards","data","about","catch","err","error","getCards","resolve","getUserInfo","card","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a3f9e8b6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.ff5e7d02.svg\";","import React from 'react';\r\nimport logo from '../images/logo.svg';\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <header className = \"header page__section page__section_indent-size_s\">\r\n        <img src = {logo} className = \"header__logo\" alt = \"logo\"/>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default React.memo(Header);","import React from 'react';\r\n\r\nfunction Profile(props) {\r\n  const { \r\n    userName,\r\n    userDescription,\r\n    userAvatar, \r\n    onAddPlacePopupOpen,\r\n    onEditAvatarPopupOpen, \r\n    onEditProfilePopupOpen } = props;\r\n\r\n  return (\r\n    <section className = \"profile page__section page__section_indent-size_m\">\r\n      <div className = \"profile__avatar\">\r\n        <button \r\n          className = \"button profile__button profile__button_type_edit-image\" \r\n          type = \"button\"\r\n          onClick = {onEditAvatarPopupOpen}\r\n        />\r\n        <img className = \"profile__image\" src = {userAvatar} alt = \"Аватар\" />\r\n      </div>\r\n      <div className = \"profile__info\">\r\n        <h1 className = \"profile__title text-ellipsis\">{userName}</h1>\r\n        <p className = \"profile__subtitle text-ellipsis\">{userDescription}</p>\r\n        <button \r\n          className = \"button profile__button profile__button_type_edit\" \r\n          type = \"button\"\r\n          onClick = {onEditProfilePopupOpen}\r\n        />\r\n      </div>\r\n      <button \r\n        className = \"button profile__button profile__button_type_add\" \r\n        type = \"button\"\r\n        onClick = {onAddPlacePopupOpen}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\n\r\nfunction Card(props) {\r\n  const { item, onCardClick } = props;  \r\n\r\n  return (\r\n    <article className = \"card\">\r\n      <button \r\n          className = \"button card__remove-button\" \r\n          type = \"button\"\r\n      />\r\n      <img \r\n        className = \"card__image\" \r\n        src = {item.link} \r\n        alt = {`Изображение карточки ${item.name}`}\r\n        onClick = {onCardClick.bind(undefined, item)} \r\n      />\r\n      <h2 className = \"card__caption text-ellipsis\">{item.name}</h2>\r\n      <div \r\n        className = \"card__like\"\r\n      >\r\n        <button \r\n          className = {`button scaling card__like-button`}\r\n          type = \"button\"\r\n        />\r\n        <span className = \"card__like-count\">{item.likes.length}</span>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nfunction Cards(props) {\r\n  const { items, onCardClick } = props;\r\n  \r\n  return (\r\n    <section className=\"cards-grid page__section page__section_indent-size_m\">\r\n      <ul className=\"list cards-grid__items\">\r\n        {items.map(item => (\r\n        <li key={item._id}>\r\n          <Card \r\n            item = {item} \r\n            onCardClick = {onCardClick}\r\n          />\r\n        </li>\r\n      ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport Cards from './Cards';\r\n\r\nfunction Main(props) {\r\n  const { \r\n    userName,\r\n    userDescription,\r\n    userAvatar,\r\n    onAddPlacePopupOpen,\r\n    onEditAvatarPopupOpen, \r\n    onEditProfilePopupOpen, \r\n    onCardClick,\r\n    cards } = props;\r\n\r\n  return (\r\n    <main className = \"content\">\r\n      <Profile\r\n        userName = {userName}\r\n        userDescription = {userDescription}\r\n        userAvatar = {userAvatar}\r\n        onAddPlacePopupOpen = {onAddPlacePopupOpen}\r\n        onEditAvatarPopupOpen = {onEditAvatarPopupOpen}\r\n        onEditProfilePopupOpen = {onEditProfilePopupOpen}\r\n      />\r\n      <Cards\r\n        items = {cards}\r\n        onCardClick = {onCardClick}\r\n      />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    console.debug(\"rendering footer\");\r\n    return (\r\n      <footer className = \"footer page__section page__section_indent-size_s\">\r\n        <p className = \"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default React.memo(Footer);","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\n\r\nfunction Page(props) {\r\n  return (\r\n    <div className = \"page\">\r\n      <Header />\r\n      <Main {...props} />\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Page;","import React from 'react';\r\n\r\nfunction Popup(props) {\r\n  const { id, children, isOpen, viewClass, onClose } = props;\r\n\r\n  console.debug(\"render popup\");\r\n\r\n  const handlePopupOverlayMouseDown = (evt) => {\r\n    if (evt.target === evt.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section \r\n      className = {`popup${isOpen ? \" popup_Open\" : \"\"}`} \r\n      id = { id }\r\n      onMouseDown = {handlePopupOverlayMouseDown}\r\n    >\r\n      <div className = {`${viewClass} popup__view`}>\r\n        {children}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Popup;","export const editAvatarPopupSelector = '.popup#edit-avatar';\r\nexport const editProfilePopupSelector = '.popup#edit-profile';\r\nexport const addCardPopupSelector = '.popup#add-card';\r\nexport const removeCardPopupSelector = '.popup#remove-card';\r\nexport const cardPreviewPopupSelector = '.popup#card-preview';\r\nexport const likePopupSelector = '.likes-view';\r\nexport const formSelector = '.form-view__form';\r\nexport const inputSelector = '.form-view__input';\r\nexport const submitSelector = '.form-view__submit';\r\nexport const cardPreviewImageSelector = '.picture-view__image';\r\nexport const cardPreviewCaptionSelector = '.picture-view__caption';\r\nexport const popupCloseBtnSelector = '.popup__close-button';\r\nexport const cardItemsSelector = '.cards-grid__items';\r\nexport const likeItemsSelector = '.likes-view__items';\r\nexport const userNameSelector = '.profile__title';\r\nexport const aboutSelector = '.profile__subtitle';\r\nexport const avatarSelector = '.profile__image';\r\n\r\nexport const cardTemplateSelector = '#card-template';\r\nexport const likesTemplateSelector = '#likes';\r\nexport const likeTemplateSelector = '#like';\r\n\r\nexport const formClass = 'form-view__form';\r\nexport const inputClass = 'form-view__input';\r\nexport const labelClass = 'form-view__field';\r\nexport const submitClass = 'form-view__submit';\r\nexport const errorClass = 'error';\r\nexport const inactiveSubmitClass = 'form-view__submit_disabled';\r\nexport const inputErrorClass = 'form-view__input_type_error';\r\nexport const errorActiveClass = 'error_visible';\r\nexport const popupActiveClass = 'popup_active';\r\nexport const spinnerClass = 'spinner';\r\nexport const spinnerVisibleClass = 'spinner_visible';\r\n\r\nexport const editAvatarBtn = document.querySelector('.profile__button.profile__button_type_edit-image');\r\nexport const editProfileBtn = document.querySelector('.profile__button.profile__button_type_edit');\r\nexport const addCardBtn = document.querySelector('.profile__button.profile__button_type_add');\r\n\r\nexport const validationConfig = {\r\n  formSelector,\r\n  inputSelector,\r\n  submitSelector,\r\n  inactiveSubmitClass,\r\n  inputErrorClass,\r\n  errorClass\r\n};\r\n\r\nexport const cardTemplate = document.querySelector(cardTemplateSelector);\r\nexport const cardsContainer = document.querySelector(cardItemsSelector);\r\nexport const submitProcessDefaultText = 'Сохранение...';\r\nexport const submitProcessRemoveText = 'Удаление...';\r\n\r\nexport const baseUri = 'https://mesto.nomoreparties.co/v1/cohort-18';\r\nexport const headers = {\r\n  authorization: 'e1917e0b-6d7d-4255-81d0-fb0ca13ea044'\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { inputClass, labelClass } from '../utils/constants';\r\n\r\nfunction Input(props) {\r\n  const {\r\n    id,\r\n    name,\r\n    type,\r\n    minLength,\r\n    maxLength,\r\n    placeholder,\r\n    value,\r\n    required,\r\n  } = props;\r\n  \r\n  console.debug(\"render input\");\r\n\r\n  return (\r\n    <label className = {labelClass} htmlFor = {id}>\r\n      <input\r\n        className = {`${inputClass}`}\r\n        id = {id}\r\n        name = {name}\r\n        type = {type}\r\n        minLength = {minLength}\r\n        maxLength = {maxLength}\r\n        placeholder = {placeholder}\r\n        value = {value}\r\n        required = {required}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nInput.defaultProps = {\r\n  type: 'text',\r\n  value: '',\r\n  required: true,\r\n  autoComplete: 'off',\r\n};\r\n\r\nInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  minLength: PropTypes.number,\r\n  maxLength: PropTypes.number,\r\n  required: PropTypes.bool,\r\n  autoComplete: PropTypes.string,\r\n};\r\n\r\nexport default Input;","import React from 'react';\r\nimport Input from './Input';\r\nimport { formClass, submitClass } from '../utils/constants';\r\n\r\nfunction Form(props) {\r\n  const {\r\n    name,\r\n    inputs,\r\n    submitTitle,\r\n  } = props;\r\n\r\n  return (\r\n    <form\r\n      name = {name}\r\n      className = {formClass}\r\n      noValidate\r\n    >\r\n      {inputs.map(\r\n        (input) => (\r\n          <Input \r\n            key = {input.id}\r\n            id = {input.id}\r\n            name = {input.name}\r\n            type = {input.type}\r\n            placeholder = {input.placeholder}\r\n            minLength = {input.minLength}\r\n            maxLength = {input.maxLength}\r\n            required\r\n          />\r\n        )\r\n      )}\r\n      <button \r\n        type = \"submit\" \r\n        className = {`button ${submitClass}`}\r\n      >\r\n        {submitTitle}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport Popup from './Popup';\r\nimport Form from './Form';\r\n\r\nfunction PopupWithForm(props) {\r\n  const { \r\n    id, \r\n    name, \r\n    title, \r\n    isOpen,\r\n    submitTitle,\r\n    onSubmit,\r\n    onClose,\r\n    inputs } = props;\r\n  \r\n  console.debug(\"Rendering Form Popup\");\r\n\r\n  return (\r\n    <Popup\r\n      id = {id}\r\n      isOpen = {isOpen}\r\n      onClose = {onClose}\r\n      viewClass = \"form-view\"\r\n    >\r\n      <button \r\n        className = \"button popup__close-button\" \r\n        type=\"button\"\r\n        onClick = {onClose}\r\n      />\r\n      <h2 className=\"form-view__title\">{title}</h2>\r\n      <Form\r\n        name = {name}\r\n        isOpen = {isOpen}\r\n        submitTitle = {submitTitle}\r\n        inputs = {inputs}\r\n        onSubmit = {onSubmit}\r\n      />\r\n    </Popup>\r\n  );\r\n}\r\n\r\nPopupWithForm.defaultProps = {\r\n  submitTitle: 'Сохранить',\r\n  inputs: [],\r\n};\r\n\r\nfunction propsAreEqual(props, nextProps) {\r\n  return props.isOpen === nextProps.isOpen && props.isProcessing === nextProps.isProcessing;\r\n}\r\n\r\nexport default React.memo(PopupWithForm, propsAreEqual);\r\n","import React from 'react';\r\nimport PopupWithForm from '../PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n  const { isOpen, onClose } = props;\r\n  \r\n  const inputs = React.useMemo(() => [\r\n    {\r\n      id: 'card-name',\r\n      name: 'name',\r\n      type: 'text',\r\n      placeholder: 'Название',\r\n      minLength: 2,\r\n      maxLength: 30,\r\n      required: true,\r\n    },\r\n    {\r\n        id: 'card-link',\r\n        name: 'link',\r\n        type: 'url',\r\n        placeholder: 'Ссылка на картинку',\r\n        required: true,\r\n    }\r\n  ], []);\r\n\r\n  console.debug(\"render add card popup\");\r\n  \r\n  return (\r\n    <PopupWithForm\r\n      id = \"add-card\"\r\n      name = \"card\"\r\n      title = \"Новое место\"\r\n      isOpen = {isOpen}\r\n      inputs = {inputs}\r\n      onClose = {onClose}\r\n    />\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport PopupWithForm from '../PopupWithForm';\r\n\r\nfunction EditAvatarPopup(props) {\r\n  const { isOpen, onClose } = props;\r\n  \r\n  console.debug(\"render add card popup\");\r\n  \r\n  return (\r\n    <PopupWithForm\r\n      id = \"edit-avatar\"\r\n      name = \"avatar\"\r\n      title = \"Обновить аватар\"\r\n      isOpen = {isOpen}\r\n      inputs = {[\r\n        {\r\n            id: 'avatar-link',\r\n            name: 'avatar',\r\n            type: 'url',\r\n            placeholder: 'Ссылка на картинку',\r\n            required: true,\r\n        }\r\n      ]}\r\n      onClose = {onClose}\r\n    />\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from '../PopupWithForm';\r\n\r\nfunction EditProfilePopup(props) {\r\n  const { isOpen, onClose } = props;\r\n  const inputs =  [\r\n    {\r\n      id: 'name',\r\n      name: 'name',\r\n      type: 'text',\r\n      placeholder: 'Имя',\r\n      minLength: 2,\r\n      maxLength: 40,\r\n      required: true,\r\n    },\r\n    {\r\n      id: 'about',\r\n      name: 'about',\r\n      type: 'text',\r\n      placeholder: 'О себе',\r\n      minLength: 2,\r\n      maxLength: 200,\r\n      required: true,\r\n    }\r\n  ];\r\n\r\n  console.debug(\"render edit profile popup\");\r\n  \r\n  return (\r\n    <PopupWithForm\r\n      id = \"edit-profile\"\r\n      name = \"profile\"\r\n      title = \"Редактировать профиль\"\r\n      isOpen = {isOpen}\r\n      inputs = {inputs}\r\n      onClose = {onClose}\r\n    />\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport Popup from './Popup';\r\n\r\nfunction ImagePopup(props) {\r\n  const { isOpen, selectedCard, onClose } = props;\r\n  \r\n  console.debug(\"render remove card popup\");\r\n  \r\n  return (\r\n    <Popup\r\n      id = \"card-preview\"\r\n      isOpen = {isOpen}\r\n      onClose = {onClose}\r\n      viewClass = \"picture-view\"\r\n    >\r\n      <div className = \"picture-view__container\">\r\n        <button \r\n          className = \"button popup__close-button\" \r\n          type = \"button\"\r\n          onClick = {onClose}\r\n        />\r\n        <img \r\n          className = \"picture-view__image\" \r\n          src = {selectedCard.link} \r\n          alt = \"Изображение карточки\"\r\n        />\r\n      </div>\r\n      <h2 className = \"picture-view__caption text-ellipsis\">\r\n        {selectedCard.name}\r\n      </h2>\r\n    </Popup>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","import { baseUri, headers } from '../utils/constants.js';\r\n\r\nconst CARDS_URL ='/cards/';\r\nconst USER_INFO_URL = '/users/me/';\r\nconst AVATAR_URL = USER_INFO_URL + 'avatar/';\r\nconst LIKE_URL = '/cards/likes/';\r\n\r\n/**\r\n * Класс для работы с API.\r\n */\r\nexport default class Api {\r\n  constructor({ baseUri, headers }) {\r\n    this._baseUri = baseUri;\r\n    this._headers = headers;\r\n  }\r\n  \r\n  /**\r\n   * Добавить карточку.\r\n   * \r\n   * @param {Object} cardData Данные карточки.\r\n   * @returns {Promise} Результат запроса.\r\n   */\r\n  AddPlace(cardData) {\r\n    const headers = { ...this._headers, 'Content-Type': 'application/json' };\r\n\r\n    return this\r\n      ._sendJson(CARDS_URL, 'POST', headers, JSON.stringify(cardData));\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {string} cardId Id карточки.\r\n   * @returns {Promise} Результат запроса.\r\n   */\r\n  deleteCard(cardId) {\r\n    return this\r\n      ._sendJson(CARDS_URL + cardId, 'DELETE', this._headers);\r\n  }\r\n\r\n  /**\r\n   * Получить карточки с сервера.\r\n   * \r\n   * @param {HTMLElement} контейнер с карточками.\r\n   * @returns {Promise} Результат запроса.\r\n   */\r\n  getCards() {\r\n    return this\r\n      ._sendJson(CARDS_URL, 'GET', this._headers);\r\n  }\r\n\r\n  /**\r\n   * Получить информацию о текущем пользователе.\r\n   * \r\n   * @returns {Promise} Результат запроса.\r\n   */\r\n  getUserInfo() {\r\n    return this\r\n      ._sendJson(USER_INFO_URL, 'GET', this._headers);\r\n  }\r\n\r\n  /**\r\n   * Обновить аватар.\r\n   * \r\n   * @param {Object} avatar Данные аватара.\r\n   * @returns {Promise} Результат запроса.\r\n   */\r\n  setAvatar(avatar) {\r\n    const headers = { ...this._headers, 'Content-Type': 'application/json' };\r\n\r\n    return this\r\n      ._sendJson(AVATAR_URL, 'PATCH', headers, JSON.stringify(avatar));\r\n  }\r\n\r\n  /**\r\n   * Обновить информацию о текущем пользователе.\r\n   * \r\n   * @returns {Promise} Результат запроса.\r\n   */\r\n  setUserInfo(userInfo) {\r\n    const headers = { ...this._headers, 'Content-Type': 'application/json' };\r\n\r\n    return this\r\n      ._sendJson(USER_INFO_URL, 'PATCH', headers, JSON.stringify(userInfo));\r\n  }\r\n\r\n  /**\r\n   * Поставить лайк карточке\r\n   * \r\n   * @param {string} cardId Id карточки.\r\n   * @returns {Promise} Результат запроса.\r\n   */\r\n  like(cardId) {\r\n    return this\r\n      ._sendJson(LIKE_URL + cardId, 'PUT', this._headers);\r\n  }\r\n\r\n  /**\r\n   * Убрать лайк у карточки.\r\n   * \r\n   * @param {string} cardId Id карточки.\r\n   * @returns {Promise} Результат запроса.\r\n   */\r\n  unlike(cardId) {\r\n    return this\r\n      ._sendJson(LIKE_URL + cardId, 'DELETE', this._headers);\r\n  }\r\n\r\n  _sendJson(url, method, headers, body) {\r\n    const uri = this._baseUri + url;\r\n\r\n    return fetch(uri, { method, headers, body })\r\n      .then(\r\n        (response) => {\r\n          console.debug(`${method} ${uri} status: ${response.status}`);\r\n\r\n          if(response.ok) {\r\n            return response.json();\r\n          }\r\n          \r\n          return Promise.reject();\r\n        });\r\n  }\r\n}\r\n\r\nexport const api = new Api({ baseUri, headers });","import React from 'react';\r\nimport Page from './Page';\r\nimport AddPlacePopup from './Popups/AddPlacePopup';\r\nimport EditAvatarPopup from './Popups/EditAvatarPopup';\r\nimport EditProfilePopup from './Popups/EditProfilePopup';\r\nimport ImagePopup from './ImagePopup';\r\nimport { api } from '../utils/Api';\r\n\r\nfunction App() {\r\n  const [userName, setUserName] = React.useState(null);\r\n  const [userDescription, setUserDescription] = React.useState(null);\r\n  const [userAvatar, setUserAvatar] = React.useState(null);\r\n\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  const [selectedCard, setSelectedCard] = React.useState({});\r\n\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isImagePreviewPopupOpen, setIsImagePreviewPopupOpen] = React.useState(false);\r\n\r\n  React.useEffect(\r\n    () => {\r\n      const handleEscKeyPressed = (evt) => {\r\n        evt.preventDefault();\r\n    \r\n        if (evt.key === 'Escape') {\r\n          handleCloseAllPopups();\r\n        }\r\n      };\r\n\r\n      document.addEventListener('keyup', handleEscKeyPressed);\r\n\r\n      return () => document.removeEventListener('keyup', handleEscKeyPressed);\r\n    },\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    console.debug(\"load initial data\");\r\n    Promise.all([fetchUserInfo(), fetchCards()])\r\n      .then(\r\n        (data) => {\r\n          const [userInfo, cards] = data;\r\n          setUserName(userInfo.name);\r\n          setUserDescription(userInfo.about)\r\n          setUserAvatar(userInfo.avatar);\r\n          setCards(cards);\r\n        })\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  const fetchCards = () => {\r\n    return api\r\n      .getCards()\r\n      .then((items) => Promise.resolve(items))\r\n      .catch(() => Promise.reject(\"Failed to fetch cards.\"));\r\n  }\r\n\r\n  const fetchUserInfo = () => {\r\n    return api\r\n      .getUserInfo()\r\n      .then((userInfo) => Promise.resolve(userInfo))\r\n      .catch(() => Promise.reject(\"Failed to set user info.\"));\r\n  };\r\n\r\n  const handleAddPlace = () => {\r\n    setIsAddPlacePopupOpen(true);\r\n  };\r\n\r\n  const handleEditAvatar = () => {\r\n    setIsEditAvatarPopupOpen(true);\r\n  };\r\n\r\n  const handleEditProfile = () => {\r\n    setIsEditProfilePopupOpen(true);\r\n  };\r\n\r\n  const handleCardClick = (card) => {\r\n    setIsImagePreviewPopupOpen(true);\r\n    setSelectedCard(card);\r\n  };\r\n\r\n  const handleCloseAllPopups = () => {\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsImagePreviewPopupOpen(false);\r\n\r\n    setSelectedCard({});\r\n  };\r\n\r\n  console.debug(\"rendering app\");\r\n  return (\r\n    <>\r\n      <Page\r\n        userName = {userName}\r\n        userDescription = {userDescription}\r\n        userAvatar = {userAvatar}\r\n        onAddPlacePopupOpen = {handleAddPlace}\r\n        onEditAvatarPopupOpen = {handleEditAvatar}\r\n        onEditProfilePopupOpen = {handleEditProfile}\r\n        onCardClick = {handleCardClick}\r\n        cards = {cards}\r\n      />\r\n      <AddPlacePopup\r\n        isOpen = {isAddPlacePopupOpen}\r\n        onClose = {handleCloseAllPopups}\r\n      />\r\n      <EditAvatarPopup\r\n        isOpen = {isEditAvatarPopupOpen}\r\n        onClose = {handleCloseAllPopups}\r\n      />\r\n      <EditProfilePopup\r\n        isOpen = {isEditProfilePopupOpen}\r\n        onClose = {handleCloseAllPopups}\r\n      />\r\n      <ImagePopup\r\n        isOpen = {isImagePreviewPopupOpen}\r\n        selectedCard = {selectedCard}\r\n        onClose = {handleCloseAllPopups}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}