{"version":3,"sources":["images/logo.svg","components/Header.js","components/Profile.js","components/Card.js","components/Cards.js","components/Main.js","components/Footer.js","components/Page.js","components/Popup.js","utils/constants.js","components/Input.js","components/Form.js","components/PopupWithForm.js","components/Popups/AddPlacePopup.js","components/Popups/EditAvatarPopup.js","components/Popups/EditProfilePopup.js","components/ImagePopup.js","utils/Api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","React","Component","memo","Profile","props","userName","userDescription","userAvatar","onAddPlacePopupOpen","onEditAvatarPopupOpen","onEditProfilePopupOpen","type","onClick","Card","item","onCardClick","link","name","bind","undefined","likes","length","Cards","items","map","_id","Main","cards","Footer","console","debug","Page","Popup","id","children","isOpen","viewClass","onClose","onMouseDown","evt","target","currentTarget","document","querySelector","Input","minLength","maxLength","placeholder","required","htmlFor","defaultProps","autoComplete","Form","inputs","submitTitle","noValidate","input","PopupWithForm","title","onSubmit","propsAreEqual","nextProps","isProcessing","AddPlacePopup","useMemo","EditAvatarPopup","EditProfilePopup","ImagePopup","selectedCard","CARDS_URL","USER_INFO_URL","LIKE_URL","api","baseUri","headers","this","_baseUri","_headers","cardData","_sendJson","JSON","stringify","cardId","avatar","userInfo","url","method","body","uri","fetch","then","response","status","ok","json","Promise","reject","authorization","App","useState","setUserName","setUserDescription","setUserAvatar","setCards","setSelectedCard","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isImagePreviewPopupOpen","setIsImagePreviewPopupOpen","useEffect","handleEscKeyPressed","preventDefault","key","handleCloseAllPopups","addEventListener","removeEventListener","all","fetchUserInfo","fetchCards","data","about","catch","err","error","getCards","resolve","getUserInfo","card","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0OAAe,MAA0B,iCCGnCA,E,uKAEF,OACE,wBAAQC,UAAY,mDAApB,SACE,qBAAKC,IAAOC,EAAMF,UAAY,eAAeG,IAAM,e,GAJtCC,IAAMC,WAUZD,MAAME,KAAKP,GC0BXQ,MArCf,SAAiBC,GAAQ,IAErBC,EAK2BD,EAL3BC,SACAC,EAI2BF,EAJ3BE,gBACAC,EAG2BH,EAH3BG,WACAC,EAE2BJ,EAF3BI,oBACAC,EAC2BL,EAD3BK,sBACAC,EAA2BN,EAA3BM,uBAEF,OACE,0BAASd,UAAY,oDAArB,UACE,sBAAKA,UAAY,kBAAjB,UACE,wBACEA,UAAY,yDACZe,KAAO,SACPC,QAAWH,IAEb,qBAAKb,UAAY,iBAAiBC,IAAOU,EAAYR,IAAM,4CAE7D,sBAAKH,UAAY,gBAAjB,UACE,oBAAIA,UAAY,+BAAhB,SAAgDS,IAChD,mBAAGT,UAAY,kCAAf,SAAkDU,IAClD,wBACEV,UAAY,mDACZe,KAAO,SACPC,QAAWF,OAGf,wBACEd,UAAY,kDACZe,KAAO,SACPC,QAAWJ,QCFJK,MA7Bf,SAAcT,GAAQ,IACZU,EAAsBV,EAAtBU,KAAMC,EAAgBX,EAAhBW,YAEd,OACE,0BAASnB,UAAY,OAArB,UACE,wBACIA,UAAY,6BACZe,KAAO,WAEX,qBACEf,UAAY,cACZC,IAAOiB,EAAKE,KACZjB,IAAG,8HAA4Be,EAAKG,MACpCL,QAAWG,EAAYG,UAAKC,EAAWL,KAEzC,oBAAIlB,UAAY,8BAAhB,SAA+CkB,EAAKG,OACpD,sBACErB,UAAY,aADd,UAGE,wBACEA,UAAS,mCACTe,KAAO,WAET,sBAAMf,UAAY,mBAAlB,SAAsCkB,EAAKM,MAAMC,gBCH1CC,MAnBf,SAAelB,GAAQ,IACbmB,EAAuBnB,EAAvBmB,MAAOR,EAAgBX,EAAhBW,YAEf,OACE,yBAASnB,UAAU,uDAAnB,SACE,oBAAIA,UAAU,yBAAd,SACG2B,EAAMC,KAAI,SAAAV,GAAI,OACf,6BACE,cAAC,EAAD,CACEA,KAAQA,EACRC,YAAeA,KAHVD,EAAKW,aCuBPC,MA7Bf,SAActB,GAAQ,IAElBC,EAOUD,EAPVC,SACAC,EAMUF,EANVE,gBACAC,EAKUH,EALVG,WACAC,EAIUJ,EAJVI,oBACAC,EAGUL,EAHVK,sBACAC,EAEUN,EAFVM,uBACAK,EACUX,EADVW,YACAY,EAAUvB,EAAVuB,MAEF,OACE,uBAAM/B,UAAY,UAAlB,UACE,cAAC,EAAD,CACES,SAAYA,EACZC,gBAAmBA,EACnBC,WAAcA,EACdC,oBAAuBA,EACvBC,sBAAyBA,EACzBC,uBAA0BA,IAE5B,cAAC,EAAD,CACEa,MAASI,EACTZ,YAAeA,QCzBjBa,E,uKAGF,OADAC,QAAQC,MAAM,oBAEZ,wBAAQlC,UAAY,mDAApB,SACE,mBAAGA,UAAY,oBAAf,0C,GALaI,IAAMC,WAWZD,MAAME,KAAK0B,GCEXG,MAVf,SAAc3B,GACZ,OACE,sBAAKR,UAAY,OAAjB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,eAAUQ,IACV,cAAC,EAAD,QCgBS4B,MAxBf,SAAe5B,GAAQ,IACb6B,EAA6C7B,EAA7C6B,GAAIC,EAAyC9B,EAAzC8B,SAAUC,EAA+B/B,EAA/B+B,OAAQC,EAAuBhC,EAAvBgC,UAAWC,EAAYjC,EAAZiC,QAUzC,OARAR,QAAQC,MAAM,gBASZ,yBACElC,UAAS,eAAYuC,EAAS,gBAAkB,IAChDF,GAAOA,EACPK,YAVgC,SAACC,GAC/BA,EAAIC,SAAWD,EAAIE,eACrBJ,KAKF,SAKE,qBAAKzC,UAAS,UAAOwC,EAAP,gBAAd,SACGF,OCcoBQ,SAASC,cAAc,oDACtBD,SAASC,cAAc,8CAC3BD,SAASC,cAAc,6CAWrBD,SAASC,cA7BD,kBA8BND,SAASC,cApCN,sBCRjC,SAASC,EAAMxC,GAAQ,IAEnB6B,EAOE7B,EAPF6B,GACAhB,EAMEb,EANFa,KACAN,EAKEP,EALFO,KACAkC,EAIEzC,EAJFyC,UACAC,EAGE1C,EAHF0C,UACAC,EAEE3C,EAFF2C,YACAC,EACE5C,EADF4C,SAKF,OAFAnB,QAAQC,MAAM,gBAGZ,uBAAOlC,UDMe,mBCNUqD,QAAWhB,EAA3C,SACE,uBACErC,UAAS,UDGS,oBCFlBqC,GAAMA,EACNhB,KAAQA,EACRN,KAAQA,EACRkC,UAAaA,EACbC,UAAaA,EACbC,YAAeA,EACfC,SAAYA,MAMpBJ,EAAMM,aAAe,CACnBvC,KAAM,OACNqC,UAAU,EACVG,aAAc,OAaDP,QCRAQ,MArCf,SAAchD,GAAQ,IAElBa,EAGEb,EAHFa,KACAoC,EAEEjD,EAFFiD,OACAC,EACElD,EADFkD,YAGF,OACE,uBACErC,KAAQA,EACRrB,UFQmB,kBEPnB2D,YAAU,EAHZ,UAKGF,EAAO7B,KACN,SAACgC,GAAD,OACE,cAAC,EAAD,CAEEvB,GAAMuB,EAAMvB,GACZhB,KAAQuC,EAAMvC,KACdN,KAAQ6C,EAAM7C,KACdoC,YAAeS,EAAMT,YACrBF,UAAaW,EAAMX,UACnBC,UAAaU,EAAMV,UACnBE,UAAQ,GAPDQ,EAAMvB,OAWnB,wBACEtB,KAAO,SACPf,UAAS,iBFRU,qBEMrB,SAIG0D,QC/BT,SAASG,EAAcrD,GAAQ,IAE3B6B,EAOW7B,EAPX6B,GACAhB,EAMWb,EANXa,KACAyC,EAKWtD,EALXsD,MACAvB,EAIW/B,EAJX+B,OACAmB,EAGWlD,EAHXkD,YACAK,EAEWvD,EAFXuD,SACAtB,EACWjC,EADXiC,QACAgB,EAAWjD,EAAXiD,OAIF,OAFAxB,QAAQC,MAAM,wBAGZ,eAAC,EAAD,CACEG,GAAMA,EACNE,OAAUA,EACVE,QAAWA,EACXD,UAAY,YAJd,UAME,wBACExC,UAAY,6BACZe,KAAK,SACLC,QAAWyB,IAEb,oBAAIzC,UAAU,mBAAd,SAAkC8D,IAClC,cAAC,EAAD,CACEzC,KAAQA,EACRkB,OAAUA,EACVmB,YAAeA,EACfD,OAAUA,EACVM,SAAYA,OAWpB,SAASC,EAAcxD,EAAOyD,GAC5B,OAAOzD,EAAM+B,SAAW0B,EAAU1B,QAAU/B,EAAM0D,eAAiBD,EAAUC,aAN/EL,EAAcP,aAAe,CAC3BI,YAAa,yDACbD,OAAQ,IAOKrD,UAAME,KAAKuD,EAAeG,GCX1BG,MApCf,SAAuB3D,GAAQ,IACrB+B,EAAoB/B,EAApB+B,OAAQE,EAAYjC,EAAZiC,QAEVgB,EAASrD,IAAMgE,SAAQ,iBAAM,CACjC,CACE/B,GAAI,YACJhB,KAAM,OACNN,KAAM,OACNoC,YAAa,mDACbF,UAAW,EACXC,UAAW,GACXE,UAAU,GAEZ,CACIf,GAAI,YACJhB,KAAM,OACNN,KAAM,MACNoC,YAAa,qGACbC,UAAU,MAEb,IAIH,OAFAnB,QAAQC,MAAM,yBAGZ,cAAC,EAAD,CACEG,GAAK,WACLhB,KAAO,OACPyC,MAAQ,gEACRvB,OAAUA,EACVkB,OAAUA,EACVhB,QAAWA,KCNF4B,MAzBf,SAAyB7D,GAAQ,IACvB+B,EAAoB/B,EAApB+B,OAAQE,EAAYjC,EAAZiC,QAIhB,OAFAR,QAAQC,MAAM,yBAGZ,cAAC,EAAD,CACEG,GAAK,cACLhB,KAAO,SACPyC,MAAQ,wFACRvB,OAAUA,EACVkB,OAAU,CACR,CACIpB,GAAI,cACJhB,KAAM,SACNN,KAAM,MACNoC,YAAa,qGACbC,UAAU,IAGhBX,QAAWA,KCiBF6B,MArCf,SAA0B9D,GAAQ,IACxB+B,EAAoB/B,EAApB+B,OAAQE,EAAYjC,EAAZiC,QAwBhB,OAFAR,QAAQC,MAAM,6BAGZ,cAAC,EAAD,CACEG,GAAK,eACLhB,KAAO,UACPyC,MAAQ,4HACRvB,OAAUA,EACVkB,OA7BY,CACd,CACEpB,GAAI,OACJhB,KAAM,OACNN,KAAM,OACNoC,YAAa,qBACbF,UAAW,EACXC,UAAW,GACXE,UAAU,GAEZ,CACEf,GAAI,QACJhB,KAAM,QACNN,KAAM,OACNoC,YAAa,kCACbF,UAAW,EACXC,UAAW,IACXE,UAAU,IAaVX,QAAWA,KCDF8B,MA/Bf,SAAoB/D,GAAQ,IAClB+B,EAAkC/B,EAAlC+B,OAAQiC,EAA0BhE,EAA1BgE,aAAc/B,EAAYjC,EAAZiC,QAI9B,OAFAR,QAAQC,MAAM,4BAGZ,eAAC,EAAD,CACEG,GAAK,eACLE,OAAUA,EACVE,QAAWA,EACXD,UAAY,eAJd,UAME,sBAAKxC,UAAY,0BAAjB,UACE,wBACEA,UAAY,6BACZe,KAAO,SACPC,QAAWyB,IAEb,qBACEzC,UAAY,sBACZC,IAAOuE,EAAapD,KACpBjB,IAAM,2HAGV,oBAAIH,UAAY,sCAAhB,SACGwE,EAAanD,WC1BhBoD,EAAW,UACXC,EAAgB,aAEhBC,EAAW,gBAuHJC,EAAM,I,WAjHjB,cAAmC,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QAAW,oBAChCC,KAAKC,SAAWH,EAChBE,KAAKE,SAAWH,E,qDASTI,GACP,IAAMJ,EAAO,2BAAQC,KAAKE,UAAb,IAAuB,eAAgB,qBAEpD,OAAOF,KACJI,UAAUV,EAAW,OAAQK,EAASM,KAAKC,UAAUH,M,iCAQ/CI,GACT,OAAOP,KACJI,UAAUV,EAAYa,EAAQ,SAAUP,KAAKE,Y,iCAUhD,OAAOF,KACJI,UAAUV,EAAW,MAAOM,KAAKE,Y,oCASpC,OAAOF,KACJI,UAAUT,EAAe,MAAOK,KAAKE,Y,gCAShCM,GACR,IAAMT,EAAO,2BAAQC,KAAKE,UAAb,IAAuB,eAAgB,qBAEpD,OAAOF,KACJI,UAlEYT,oBAkEU,QAASI,EAASM,KAAKC,UAAUE,M,kCAQhDC,GACV,IAAMV,EAAO,2BAAQC,KAAKE,UAAb,IAAuB,eAAgB,qBAEpD,OAAOF,KACJI,UAAUT,EAAe,QAASI,EAASM,KAAKC,UAAUG,M,2BAS1DF,GACH,OAAOP,KACJI,UAAUR,EAAWW,EAAQ,MAAOP,KAAKE,Y,6BASvCK,GACL,OAAOP,KACJI,UAAUR,EAAWW,EAAQ,SAAUP,KAAKE,Y,gCAGvCQ,EAAKC,EAAQZ,EAASa,GAC9B,IAAMC,EAAMb,KAAKC,SAAWS,EAE5B,OAAOI,MAAMD,EAAK,CAAEF,SAAQZ,UAASa,SAClCG,MACC,SAACC,GAGC,OAFA9D,QAAQC,MAAR,UAAiBwD,EAAjB,YAA2BE,EAA3B,oBAA0CG,EAASC,SAEhDD,EAASE,GACHF,EAASG,OAGXC,QAAQC,gB,KAKN,CAAQ,CAAEvB,QRxEN,8CQwEeC,QRvEf,CACrBuB,cAAe,0CSyEFC,MAvHf,WAAgB,IAAD,EACmBlG,IAAMmG,SAAS,MADlC,mBACN9F,EADM,KACI+F,EADJ,OAEiCpG,IAAMmG,SAAS,MAFhD,mBAEN7F,EAFM,KAEW+F,EAFX,OAGuBrG,IAAMmG,SAAS,MAHtC,mBAGN5F,EAHM,KAGM+F,EAHN,OAKatG,IAAMmG,SAAS,IAL5B,mBAKNxE,EALM,KAKC4E,EALD,OAO2BvG,IAAMmG,SAAS,IAP1C,mBAON/B,EAPM,KAOQoC,EAPR,OASyCxG,IAAMmG,UAAS,GATxD,mBASNM,EATM,KASeC,EATf,OAU6C1G,IAAMmG,UAAS,GAV5D,mBAUNQ,EAVM,KAUiBC,EAVjB,OAW+C5G,IAAMmG,UAAS,GAX9D,mBAWNU,EAXM,KAWkBC,EAXlB,OAYiD9G,IAAMmG,UAAS,GAZhE,mBAYNY,EAZM,KAYmBC,EAZnB,KAcbhH,IAAMiH,WACJ,WACE,IAAMC,EAAsB,SAAC3E,GAC3BA,EAAI4E,iBAEY,WAAZ5E,EAAI6E,KACNC,KAMJ,OAFA3E,SAAS4E,iBAAiB,QAASJ,GAE5B,kBAAMxE,SAAS6E,oBAAoB,QAASL,MAErD,IAGFlH,IAAMiH,WAAU,WACdpF,QAAQC,MAAM,qBACdiE,QAAQyB,IAAI,CAACC,IAAiBC,MAC3BhC,MACC,SAACiC,GAAU,IAAD,cACkBA,EADlB,GACDvC,EADC,KACSzD,EADT,KAERyE,EAAYhB,EAASnE,MACrBoF,EAAmBjB,EAASwC,OAC5BtB,EAAclB,EAASD,QACvBoB,EAAS5E,MAEZkG,OAAM,SAACC,GAAD,OAASjG,QAAQkG,MAAMD,QAC/B,IAEH,IAAMJ,EAAa,WACjB,OAAOlD,EACJwD,WACAtC,MAAK,SAACnE,GAAD,OAAWwE,QAAQkC,QAAQ1G,MAChCsG,OAAM,kBAAM9B,QAAQC,OAAO,8BAG1ByB,EAAgB,WACpB,OAAOjD,EACJ0D,cACAxC,MAAK,SAACN,GAAD,OAAcW,QAAQkC,QAAQ7C,MACnCyC,OAAM,kBAAM9B,QAAQC,OAAO,gCAoB1BqB,EAAuB,WAC3BX,GAAuB,GACvBE,GAAyB,GACzBE,GAA0B,GAC1BE,GAA2B,GAE3BR,EAAgB,KAIlB,OADA3E,QAAQC,MAAM,iBAEZ,qCACE,cAAC,EAAD,CACEzB,SAAYA,EACZC,gBAAmBA,EACnBC,WAAcA,EACdC,oBAjCiB,WACrBkG,GAAuB,IAiCnBjG,sBA9BmB,WACvBmG,GAAyB,IA8BrBlG,uBA3BoB,WACxBoG,GAA0B,IA2BtB/F,YAxBkB,SAACoH,GACvBnB,GAA2B,GAC3BR,EAAgB2B,IAuBZxG,MAASA,IAEX,cAAC,EAAD,CACEQ,OAAUsE,EACVpE,QAAWgF,IAEb,cAAC,EAAD,CACElF,OAAUwE,EACVtE,QAAWgF,IAEb,cAAC,EAAD,CACElF,OAAU0E,EACVxE,QAAWgF,IAEb,cAAC,EAAD,CACElF,OAAU4E,EACV3C,aAAgBA,EAChB/B,QAAWgF,QC7GJe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpG,SAASqG,eAAe,SAM1BX,M","file":"static/js/main.9bb8a83d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.ff5e7d02.svg\";","import React from 'react';\nimport logo from '../images/logo.svg';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className = \"header page__section page__section_indent-size_s\">\n        <img src = {logo} className = \"header__logo\" alt = \"logo\"/>\n      </header>\n    )\n  }\n}\n\nexport default React.memo(Header);","import React from 'react';\n\nfunction Profile(props) {\n  const { \n    userName,\n    userDescription,\n    userAvatar, \n    onAddPlacePopupOpen,\n    onEditAvatarPopupOpen, \n    onEditProfilePopupOpen } = props;\n\n  return (\n    <section className = \"profile page__section page__section_indent-size_m\">\n      <div className = \"profile__avatar\">\n        <button \n          className = \"button profile__button profile__button_type_edit-image\" \n          type = \"button\"\n          onClick = {onEditAvatarPopupOpen}\n        />\n        <img className = \"profile__image\" src = {userAvatar} alt = \"Аватар\" />\n      </div>\n      <div className = \"profile__info\">\n        <h1 className = \"profile__title text-ellipsis\">{userName}</h1>\n        <p className = \"profile__subtitle text-ellipsis\">{userDescription}</p>\n        <button \n          className = \"button profile__button profile__button_type_edit\" \n          type = \"button\"\n          onClick = {onEditProfilePopupOpen}\n        />\n      </div>\n      <button \n        className = \"button profile__button profile__button_type_add\" \n        type = \"button\"\n        onClick = {onAddPlacePopupOpen}\n      />\n    </section>\n  );\n}\n\nexport default Profile;","import React from 'react';\n\nfunction Card(props) {\n  const { item, onCardClick } = props;  \n\n  return (\n    <article className = \"card\">\n      <button \n          className = \"button card__remove-button\" \n          type = \"button\"\n      />\n      <img \n        className = \"card__image\" \n        src = {item.link} \n        alt = {`Изображение карточки ${item.name}`}\n        onClick = {onCardClick.bind(undefined, item)} \n      />\n      <h2 className = \"card__caption text-ellipsis\">{item.name}</h2>\n      <div \n        className = \"card__like\"\n      >\n        <button \n          className = {`button scaling card__like-button`}\n          type = \"button\"\n        />\n        <span className = \"card__like-count\">{item.likes.length}</span>\n      </div>\n    </article>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nfunction Cards(props) {\n  const { items, onCardClick } = props;\n  \n  return (\n    <section className=\"cards-grid page__section page__section_indent-size_m\">\n      <ul className=\"list cards-grid__items\">\n        {items.map(item => (\n        <li key={item._id}>\n          <Card \n            item = {item} \n            onCardClick = {onCardClick}\n          />\n        </li>\n      ))}\n      </ul>\n    </section>\n  );\n}\n\nexport default Cards;\n","import React from 'react';\nimport Profile from './Profile';\nimport Cards from './Cards';\n\nfunction Main(props) {\n  const { \n    userName,\n    userDescription,\n    userAvatar,\n    onAddPlacePopupOpen,\n    onEditAvatarPopupOpen, \n    onEditProfilePopupOpen, \n    onCardClick,\n    cards } = props;\n\n  return (\n    <main className = \"content\">\n      <Profile\n        userName = {userName}\n        userDescription = {userDescription}\n        userAvatar = {userAvatar}\n        onAddPlacePopupOpen = {onAddPlacePopupOpen}\n        onEditAvatarPopupOpen = {onEditAvatarPopupOpen}\n        onEditProfilePopupOpen = {onEditProfilePopupOpen}\n      />\n      <Cards\n        items = {cards}\n        onCardClick = {onCardClick}\n      />\n    </main>\n  );\n}\n\nexport default Main;","import React from 'react';\n\nclass Footer extends React.Component {\n  render() {\n    console.debug(\"rendering footer\");\n    return (\n      <footer className = \"footer page__section page__section_indent-size_s\">\n        <p className = \"footer__copyright\">&copy; 2020 Mesto Russia</p>\n      </footer>\n    )\n  }\n}\n\nexport default React.memo(Footer);","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n\nfunction Page(props) {\n  return (\n    <div className = \"page\">\n      <Header />\n      <Main {...props} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default Page;","import React from 'react';\n\nfunction Popup(props) {\n  const { id, children, isOpen, viewClass, onClose } = props;\n\n  console.debug(\"render popup\");\n\n  const handlePopupOverlayMouseDown = (evt) => {\n    if (evt.target === evt.currentTarget) {\n      onClose();\n    }\n  };\n\n  return (\n    <section \n      className = {`popup${isOpen ? \" popup_active\" : \"\"}`} \n      id = { id }\n      onMouseDown = {handlePopupOverlayMouseDown}\n    >\n      <div className = {`${viewClass} popup__view`}>\n        {children}\n      </div>\n    </section>\n  );\n}\n\nexport default Popup;","export const editAvatarPopupSelector = '.popup#edit-avatar';\nexport const editProfilePopupSelector = '.popup#edit-profile';\nexport const addCardPopupSelector = '.popup#add-card';\nexport const removeCardPopupSelector = '.popup#remove-card';\nexport const cardPreviewPopupSelector = '.popup#card-preview';\nexport const likePopupSelector = '.likes-view';\nexport const formSelector = '.form-view__form';\nexport const inputSelector = '.form-view__input';\nexport const submitSelector = '.form-view__submit';\nexport const cardPreviewImageSelector = '.picture-view__image';\nexport const cardPreviewCaptionSelector = '.picture-view__caption';\nexport const popupCloseBtnSelector = '.popup__close-button';\nexport const cardItemsSelector = '.cards-grid__items';\nexport const likeItemsSelector = '.likes-view__items';\nexport const userNameSelector = '.profile__title';\nexport const aboutSelector = '.profile__subtitle';\nexport const avatarSelector = '.profile__image';\n\nexport const cardTemplateSelector = '#card-template';\nexport const likesTemplateSelector = '#likes';\nexport const likeTemplateSelector = '#like';\n\nexport const formClass = 'form-view__form';\nexport const inputClass = 'form-view__input';\nexport const labelClass = 'form-view__field';\nexport const submitClass = 'form-view__submit';\nexport const errorClass = 'error';\nexport const inactiveSubmitClass = 'form-view__submit_disabled';\nexport const inputErrorClass = 'form-view__input_type_error';\nexport const errorActiveClass = 'error_visible';\nexport const popupActiveClass = 'popup_active';\nexport const spinnerClass = 'spinner';\nexport const spinnerVisibleClass = 'spinner_visible';\n\nexport const editAvatarBtn = document.querySelector('.profile__button.profile__button_type_edit-image');\nexport const editProfileBtn = document.querySelector('.profile__button.profile__button_type_edit');\nexport const addCardBtn = document.querySelector('.profile__button.profile__button_type_add');\n\nexport const validationConfig = {\n  formSelector,\n  inputSelector,\n  submitSelector,\n  inactiveSubmitClass,\n  inputErrorClass,\n  errorClass\n};\n\nexport const cardTemplate = document.querySelector(cardTemplateSelector);\nexport const cardsContainer = document.querySelector(cardItemsSelector);\nexport const submitProcessDefaultText = 'Сохранение...';\nexport const submitProcessRemoveText = 'Удаление...';\n\nexport const baseUri = 'https://mesto.nomoreparties.co/v1/cohort-18';\nexport const headers = {\n  authorization: 'e1917e0b-6d7d-4255-81d0-fb0ca13ea044'\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inputClass, labelClass } from '../utils/constants';\n\nfunction Input(props) {\n  const {\n    id,\n    name,\n    type,\n    minLength,\n    maxLength,\n    placeholder,\n    required,\n  } = props;\n  \n  console.debug(\"render input\");\n\n  return (\n    <label className = {labelClass} htmlFor = {id}>\n      <input\n        className = {`${inputClass}`}\n        id = {id}\n        name = {name}\n        type = {type}\n        minLength = {minLength}\n        maxLength = {maxLength}\n        placeholder = {placeholder}\n        required = {required}\n      />\n    </label>\n  );\n}\n\nInput.defaultProps = {\n  type: 'text',\n  required: true,\n  autoComplete: 'off',\n};\n\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  required: PropTypes.bool,\n  autoComplete: PropTypes.string,\n};\n\nexport default Input;","import React from 'react';\nimport Input from './Input';\nimport { formClass, submitClass } from '../utils/constants';\n\nfunction Form(props) {\n  const {\n    name,\n    inputs,\n    submitTitle,\n  } = props;\n\n  return (\n    <form\n      name = {name}\n      className = {formClass}\n      noValidate\n    >\n      {inputs.map(\n        (input) => (\n          <Input \n            key = {input.id}\n            id = {input.id}\n            name = {input.name}\n            type = {input.type}\n            placeholder = {input.placeholder}\n            minLength = {input.minLength}\n            maxLength = {input.maxLength}\n            required\n          />\n        )\n      )}\n      <button \n        type = \"submit\" \n        className = {`button ${submitClass}`}\n      >\n        {submitTitle}\n      </button>\n    </form>\n  );\n}\n\nexport default Form;","import React from 'react';\nimport Popup from './Popup';\nimport Form from './Form';\n\nfunction PopupWithForm(props) {\n  const { \n    id, \n    name, \n    title, \n    isOpen,\n    submitTitle,\n    onSubmit,\n    onClose,\n    inputs } = props;\n  \n  console.debug(\"Rendering Form Popup\");\n\n  return (\n    <Popup\n      id = {id}\n      isOpen = {isOpen}\n      onClose = {onClose}\n      viewClass = \"form-view\"\n    >\n      <button \n        className = \"button popup__close-button\" \n        type=\"button\"\n        onClick = {onClose}\n      />\n      <h2 className=\"form-view__title\">{title}</h2>\n      <Form\n        name = {name}\n        isOpen = {isOpen}\n        submitTitle = {submitTitle}\n        inputs = {inputs}\n        onSubmit = {onSubmit}\n      />\n    </Popup>\n  );\n}\n\nPopupWithForm.defaultProps = {\n  submitTitle: 'Сохранить',\n  inputs: [],\n};\n\nfunction propsAreEqual(props, nextProps) {\n  return props.isOpen === nextProps.isOpen && props.isProcessing === nextProps.isProcessing;\n}\n\nexport default React.memo(PopupWithForm, propsAreEqual);\n","import React from 'react';\nimport PopupWithForm from '../PopupWithForm';\n\nfunction AddPlacePopup(props) {\n  const { isOpen, onClose } = props;\n  \n  const inputs = React.useMemo(() => [\n    {\n      id: 'card-name',\n      name: 'name',\n      type: 'text',\n      placeholder: 'Название',\n      minLength: 2,\n      maxLength: 30,\n      required: true,\n    },\n    {\n        id: 'card-link',\n        name: 'link',\n        type: 'url',\n        placeholder: 'Ссылка на картинку',\n        required: true,\n    }\n  ], []);\n\n  console.debug(\"render add card popup\");\n  \n  return (\n    <PopupWithForm\n      id = \"add-card\"\n      name = \"card\"\n      title = \"Новое место\"\n      isOpen = {isOpen}\n      inputs = {inputs}\n      onClose = {onClose}\n    />\n  );\n}\n\nexport default AddPlacePopup;","import React from 'react';\nimport PopupWithForm from '../PopupWithForm';\n\nfunction EditAvatarPopup(props) {\n  const { isOpen, onClose } = props;\n  \n  console.debug(\"render add card popup\");\n  \n  return (\n    <PopupWithForm\n      id = \"edit-avatar\"\n      name = \"avatar\"\n      title = \"Обновить аватар\"\n      isOpen = {isOpen}\n      inputs = {[\n        {\n            id: 'avatar-link',\n            name: 'avatar',\n            type: 'url',\n            placeholder: 'Ссылка на картинку',\n            required: true,\n        }\n      ]}\n      onClose = {onClose}\n    />\n  );\n}\n\nexport default EditAvatarPopup;","import React from 'react';\nimport PopupWithForm from '../PopupWithForm';\n\nfunction EditProfilePopup(props) {\n  const { isOpen, onClose } = props;\n  const inputs =  [\n    {\n      id: 'name',\n      name: 'name',\n      type: 'text',\n      placeholder: 'Имя',\n      minLength: 2,\n      maxLength: 40,\n      required: true,\n    },\n    {\n      id: 'about',\n      name: 'about',\n      type: 'text',\n      placeholder: 'О себе',\n      minLength: 2,\n      maxLength: 200,\n      required: true,\n    }\n  ];\n\n  console.debug(\"render edit profile popup\");\n  \n  return (\n    <PopupWithForm\n      id = \"edit-profile\"\n      name = \"profile\"\n      title = \"Редактировать профиль\"\n      isOpen = {isOpen}\n      inputs = {inputs}\n      onClose = {onClose}\n    />\n  );\n}\n\nexport default EditProfilePopup;","import React from 'react';\nimport Popup from './Popup';\n\nfunction ImagePopup(props) {\n  const { isOpen, selectedCard, onClose } = props;\n  \n  console.debug(\"render remove card popup\");\n  \n  return (\n    <Popup\n      id = \"card-preview\"\n      isOpen = {isOpen}\n      onClose = {onClose}\n      viewClass = \"picture-view\"\n    >\n      <div className = \"picture-view__container\">\n        <button \n          className = \"button popup__close-button\" \n          type = \"button\"\n          onClick = {onClose}\n        />\n        <img \n          className = \"picture-view__image\" \n          src = {selectedCard.link} \n          alt = \"Изображение карточки\"\n        />\n      </div>\n      <h2 className = \"picture-view__caption text-ellipsis\">\n        {selectedCard.name}\n      </h2>\n    </Popup>\n  );\n}\n\nexport default ImagePopup;","import { baseUri, headers } from '../utils/constants.js';\n\nconst CARDS_URL ='/cards/';\nconst USER_INFO_URL = '/users/me/';\nconst AVATAR_URL = USER_INFO_URL + 'avatar/';\nconst LIKE_URL = '/cards/likes/';\n\n/**\n * Класс для работы с API.\n */\nexport default class Api {\n  constructor({ baseUri, headers }) {\n    this._baseUri = baseUri;\n    this._headers = headers;\n  }\n  \n  /**\n   * Добавить карточку.\n   * \n   * @param {Object} cardData Данные карточки.\n   * @returns {Promise} Результат запроса.\n   */\n  AddPlace(cardData) {\n    const headers = { ...this._headers, 'Content-Type': 'application/json' };\n\n    return this\n      ._sendJson(CARDS_URL, 'POST', headers, JSON.stringify(cardData));\n  }\n\n  /**\n   * \n   * @param {string} cardId Id карточки.\n   * @returns {Promise} Результат запроса.\n   */\n  deleteCard(cardId) {\n    return this\n      ._sendJson(CARDS_URL + cardId, 'DELETE', this._headers);\n  }\n\n  /**\n   * Получить карточки с сервера.\n   * \n   * @param {HTMLElement} контейнер с карточками.\n   * @returns {Promise} Результат запроса.\n   */\n  getCards() {\n    return this\n      ._sendJson(CARDS_URL, 'GET', this._headers);\n  }\n\n  /**\n   * Получить информацию о текущем пользователе.\n   * \n   * @returns {Promise} Результат запроса.\n   */\n  getUserInfo() {\n    return this\n      ._sendJson(USER_INFO_URL, 'GET', this._headers);\n  }\n\n  /**\n   * Обновить аватар.\n   * \n   * @param {Object} avatar Данные аватара.\n   * @returns {Promise} Результат запроса.\n   */\n  setAvatar(avatar) {\n    const headers = { ...this._headers, 'Content-Type': 'application/json' };\n\n    return this\n      ._sendJson(AVATAR_URL, 'PATCH', headers, JSON.stringify(avatar));\n  }\n\n  /**\n   * Обновить информацию о текущем пользователе.\n   * \n   * @returns {Promise} Результат запроса.\n   */\n  setUserInfo(userInfo) {\n    const headers = { ...this._headers, 'Content-Type': 'application/json' };\n\n    return this\n      ._sendJson(USER_INFO_URL, 'PATCH', headers, JSON.stringify(userInfo));\n  }\n\n  /**\n   * Поставить лайк карточке\n   * \n   * @param {string} cardId Id карточки.\n   * @returns {Promise} Результат запроса.\n   */\n  like(cardId) {\n    return this\n      ._sendJson(LIKE_URL + cardId, 'PUT', this._headers);\n  }\n\n  /**\n   * Убрать лайк у карточки.\n   * \n   * @param {string} cardId Id карточки.\n   * @returns {Promise} Результат запроса.\n   */\n  unlike(cardId) {\n    return this\n      ._sendJson(LIKE_URL + cardId, 'DELETE', this._headers);\n  }\n\n  _sendJson(url, method, headers, body) {\n    const uri = this._baseUri + url;\n\n    return fetch(uri, { method, headers, body })\n      .then(\n        (response) => {\n          console.debug(`${method} ${uri} status: ${response.status}`);\n\n          if(response.ok) {\n            return response.json();\n          }\n          \n          return Promise.reject();\n        });\n  }\n}\n\nexport const api = new Api({ baseUri, headers });","import React from 'react';\nimport Page from './Page';\nimport AddPlacePopup from './Popups/AddPlacePopup';\nimport EditAvatarPopup from './Popups/EditAvatarPopup';\nimport EditProfilePopup from './Popups/EditProfilePopup';\nimport ImagePopup from './ImagePopup';\nimport { api } from '../utils/Api';\n\nfunction App() {\n  const [userName, setUserName] = React.useState(null);\n  const [userDescription, setUserDescription] = React.useState(null);\n  const [userAvatar, setUserAvatar] = React.useState(null);\n\n  const [cards, setCards] = React.useState([]);\n\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isImagePreviewPopupOpen, setIsImagePreviewPopupOpen] = React.useState(false);\n\n  React.useEffect(\n    () => {\n      const handleEscKeyPressed = (evt) => {\n        evt.preventDefault();\n    \n        if (evt.key === 'Escape') {\n          handleCloseAllPopups();\n        }\n      };\n\n      document.addEventListener('keyup', handleEscKeyPressed);\n\n      return () => document.removeEventListener('keyup', handleEscKeyPressed);\n    },\n    []\n  );\n\n  React.useEffect(() => {\n    console.debug(\"load initial data\");\n    Promise.all([fetchUserInfo(), fetchCards()])\n      .then(\n        (data) => {\n          const [userInfo, cards] = data;\n          setUserName(userInfo.name);\n          setUserDescription(userInfo.about)\n          setUserAvatar(userInfo.avatar);\n          setCards(cards);\n        })\n      .catch((err) => console.error(err));\n  }, []);\n\n  const fetchCards = () => {\n    return api\n      .getCards()\n      .then((items) => Promise.resolve(items))\n      .catch(() => Promise.reject(\"Failed to fetch cards.\"));\n  }\n\n  const fetchUserInfo = () => {\n    return api\n      .getUserInfo()\n      .then((userInfo) => Promise.resolve(userInfo))\n      .catch(() => Promise.reject(\"Failed to set user info.\"));\n  };\n\n  const handleAddPlace = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const handleEditAvatar = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfile = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleCardClick = (card) => {\n    setIsImagePreviewPopupOpen(true);\n    setSelectedCard(card);\n  };\n\n  const handleCloseAllPopups = () => {\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsImagePreviewPopupOpen(false);\n\n    setSelectedCard({});\n  };\n\n  console.debug(\"rendering app\");\n  return (\n    <>\n      <Page\n        userName = {userName}\n        userDescription = {userDescription}\n        userAvatar = {userAvatar}\n        onAddPlacePopupOpen = {handleAddPlace}\n        onEditAvatarPopupOpen = {handleEditAvatar}\n        onEditProfilePopupOpen = {handleEditProfile}\n        onCardClick = {handleCardClick}\n        cards = {cards}\n      />\n      <AddPlacePopup\n        isOpen = {isAddPlacePopupOpen}\n        onClose = {handleCloseAllPopups}\n      />\n      <EditAvatarPopup\n        isOpen = {isEditAvatarPopupOpen}\n        onClose = {handleCloseAllPopups}\n      />\n      <EditProfilePopup\n        isOpen = {isEditProfilePopupOpen}\n        onClose = {handleCloseAllPopups}\n      />\n      <ImagePopup\n        isOpen = {isImagePreviewPopupOpen}\n        selectedCard = {selectedCard}\n        onClose = {handleCloseAllPopups}\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}